Bootstrap: docker
From : ubuntu:20.04

%environment
	export OPICS_HOME=$HOME/optics_inter_vx
	export PYTHONPATH=$HOME/optics_inter_vx:$HOME/optics_inter_vx/scripts/optics
    export PATH=/miniconda3/bin:$PATH

%post 
    ############################################################################
	# clone the repo first so permissions go by early in the build
    ############################################################################
	apt-get update -y
    apt-get install -y git
    apt-get install -y wget
    cd /
    git clone --recurse-submodules https://github.com/MCS-OSU/opics.git eval6
    ############################################################################
	# put the correct branches into play
    ############################################################################
    cd /eval6
    git checkout int.diego.mapping.merge
    cd /eval6/scripts/optics
    git checkout main
    ############################################################################
    # pull in the key file to access ec2b machine
    ############################################################################
    cd /eval6/scripts/ec2
    wget --no-check-certificate 'https://docs.google.com/uc?export=download&id=1BGff0DlqdUGEHtkCSK2FPjVcw7m5XpnY' -O shared-with-opics.pem
    ############################################################################
	# Install python and other tools
	# Non-interactive is used to ensure prompts are omitted.
    ############################################################################
	DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    build-essential \
	python3-dev \
	python3-tk \
	python3-pip \
	python3-setuptools \
	systemd \
	imagemagick \
	curl \
	openslide-tools \
    unzip \
    libopencv-dev

    ############################################################################
	# install miniconda
    ############################################################################
    wget https://repo.anaconda.com/miniconda/Miniconda3-py39_22.11.1-1-Linux-x86_64.sh
    bash Miniconda3-py39_22.11.1-1-Linux-x86_64.sh -b -p /miniconda3
    export PATH=/miniconda3/bin:$PATH

    ############################################################################
	# opics depencies
    ############################################################################
    echo "Setting conda init..."
    export CONDA_PATH=$(conda info | grep -i 'base environment' | cut -d ":" -f2 | cut -d " " -f2)
    . $CONDA_PATH/etc/profile.d/conda.sh
    echo "Setting up environment..."
    
    

    echo '==============  update, build-essential, python3-dev  ==================='
    python -m pip install --upgrade pip setuptools wheel

    python -m pip install gdown
    


    echo '============== skills dependencies ==============='
    python -m pip install gym
    python -m pip install matplotlib
    python -m pip install stable-baselines3
    python -m pip install h5py

    echo '==============  detectron2  ==================='
    python -m pip install torch==1.12.1+cu113 torchvision==0.13.1+cu113 --extra-index-url https://download.pytorch.org/whl/cu113
    python -m pip install 'git+https://github.com/facebookresearch/detectron2.git'

    echo '==============  machine-common-sense  ==================='
    python -m pip install machine-common-sense --upgrade

    echo '==============  ray, pathfinding, descartes, numpy quaternion  ==================='
    python -m  pip install ray==1.4.1
    python -m pip install pathfinding
    python -m pip install descartes==1.1.0
    python -m pip install numpy-quaternion==2020.5.19.15.27.24
    python -m pip install numpy-indexed==0.3.5
    python -m pip install easydict==1.9
    python -m pip install shapely==1.7.1

    echo '==============  misc libs =================='
    python -m pip install rich

    echo '==============  setting up vision models and weights  ==================='
    cd /eval6/opics/inter/vision/models/
    wget -v -O object_interactive_unity_5_7_v2.pth https://oregonstate.box.com/shared/static/1t7untztj9ceh4g22efq3r0qn87e87kn 
    wget -v -O tool_detector_v1.pth https://oregonstate.box.com/shared/static/alb530h2pgygs955w8jwetyvdgcqwgum.pth
    wget -v -O human_detector_v1.pth https://oregonstate.box.com/shared/static/e0igpcvf6mb5fugs8uwuxvbafrdqbx35


    echo '==============  setting up reinforcement learning models  ==================='
    cd /eval6/opics/inter/MCS_exploration/PPO/models/
    wget -v -O moving_target_solver.pt https://oregonstate.box.com/shared/static/5dn48anw0d8351b3m0ggkfys95a4k21g
    wget -v -O open_skill.pt https://oregonstate.box.com/shared/static/ne39jn526no4cfwoqn6mogszjhowqcsy
    wget -v -O pick_skill.pt https://oregonstate.box.com/shared/static/eo0yq25i6c8vanw1qhkrqvrzhhcrch1n
    wget -v -O agent_identification.pt https://oregonstate.box.com/shared/static/rsvool6560vclx8avlcuge2ydvk60n31

    ############################################################################
	#                   --- numpy version hack ---
    # Reduce numpy version to solve error when 1.24.1 is in place:
    # AttributeError: module 'numpy' has no attribute 'float'
    ############################################################################
    python -m pip uninstall -y numpy
    python -m pip install numpy==1.23.5

   
    mkdir inter_scene
    cd inter_scene
    wget https://resources.machinecommonsense.com/eval-scenes-5/quebec_0001_24_B1_debug.json
